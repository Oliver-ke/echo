# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Current Status for appointment"""
enum AppointMentStatus {
  ACCEPTED
  CANCELED
  COMPLETED
  PENDING
}

type Appointment {
  about: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  endDate: String!
  guestAvailability: Availability!
  guestAvailabilityId: Int!
  guestId: Int!
  id: ID!
  startDate: String!
  status: AppointMentStatus!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  user: User!
  userId: Int!
}

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
}

type Availability {
  active: Boolean!
  appointments: [Appointment!]!
  available: Boolean!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  endTimeDate: DateTime!
  id: ID!
  startTimeDate: DateTime!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  user: User!
  userId: Int!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input CreateAppointmentInput {
  about: String
  endDate: String
  guestAvailabilityId: Int
  guestId: Int
  startDate: String
}

input CreateAvailabilityInput {
  endTimeDate: DateTime
  startTimeDate: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  changeAppointmentStatus(id: Int!, status: String!): Appointment!
  changePassword(data: ChangePasswordInput!): User!
  createAppointment(data: CreateAppointmentInput!): Appointment!
  createAvailability(data: CreateAvailabilityInput!): Availability!
  deleteAppointment(ids: [Int!]!): Appointment!
  login(data: LoginInput!): Auth!
  refreshToken(token: JWT!): Token!
  signup(data: SignupInput!): Auth!
  updateAppointment(data: UpdateAppointmentInput!, id: Int!): Appointment!
  updateAvailability(data: UpdateAvailabilityInput!, id: Int!): Availability!
  updateUser(data: UpdateUserInput!): User!
}

type Post {
  author: User!
  content: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  published: Boolean!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type Query {
  appointment(id: Int!): Appointment!
  availabilities: [Availability!]!
  availability(id: Int!): Availability!
  helloWorld: String!
  me: User!
}

"""User role can either be ADMIN, COACH or FELLOW"""
enum Role {
  ADMIN
  COACH
  FELLOW
}

input SignupInput {
  email: String!
  firstname: String
  lastname: String
  password: String!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

input UpdateAppointmentInput {
  about: String
  endDate: String
  guestAvailabilityId: Int
  startDate: String
}

input UpdateAvailabilityInput {
  active: Boolean
  available: Boolean
  endTimeDate: DateTime
  startTimeDate: DateTime
}

input UpdateUserInput {
  age: String
  attentionStatement: String
  bio: String
  country: String
  firstname: String
  issueCategory: String
  issueType: String
  lastname: String
  phoneNumber: String
  pictureUrl: String
}

type User {
  age: String!
  attentionStatement: String!
  bio: String
  country: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  email: String!
  firstname: String
  id: ID!
  issueCategory: String!
  issueType: String!
  lastname: String
  phoneNumber: String!
  pictureUrl: String!
  posts: [Post!]!
  role: Role!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}
